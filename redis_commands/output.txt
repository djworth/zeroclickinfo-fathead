HGET		http://redis.io//commands/hget	Get the value of a hash field				
UNWATCH		http://redis.io//commands/unwatch	Forget about all watched keys				
EVAL		http://redis.io//commands/eval	Execute a Lua script server side				
DBSIZE		http://redis.io//commands/dbsize	Return the number of keys in the selected database				
KEYS		http://redis.io//commands/keys	Find all keys matching the given pattern				
ZCARD		http://redis.io//commands/zcard	Get the number of members in a sorted set				
CONFIG GET		http://redis.io//commands/config-get	Get the value of a configuration parameter				
SREM		http://redis.io//commands/srem	Remove one or more members from a set				
SINTERSTORE		http://redis.io//commands/sinterstore	Intersect multiple sets and store the resulting set in a key				
DEL		http://redis.io//commands/del	Delete a key				
HKEYS		http://redis.io//commands/hkeys	Get all the fields in a hash				
BITCOUNT		http://redis.io//commands/bitcount	Count set bits in a string				
LINDEX		http://redis.io//commands/lindex	Get an element from a list by its index				
EXPIRE		http://redis.io//commands/expire	Set a key's time to live in seconds				
SDIFFSTORE		http://redis.io//commands/sdiffstore	Subtract multiple sets and store the resulting set in a key				
BLPOP		http://redis.io//commands/blpop	Remove and get the first element in a list, or block until one is available				
MONITOR		http://redis.io//commands/monitor	Listen for all requests received by the server in real time				
PEXPIRE		http://redis.io//commands/pexpire	Set a key's time to live in milliseconds				
PUBLISH		http://redis.io//commands/publish	Post a message to a channel				
HSETNX		http://redis.io//commands/hsetnx	Set the value of a hash field, only if the field does not exist				
PSUBSCRIBE		http://redis.io//commands/psubscribe	Listen for messages published to channels matching the given patterns				
ZREVRANGE		http://redis.io//commands/zrevrange	Return a range of members in a sorted set, by index, with scores ordered from high to low				
MOVE		http://redis.io//commands/move	Move a key to another database				
ECHO		http://redis.io//commands/echo	Echo the given string				
DUMP		http://redis.io//commands/dump	Return a serialized verison of the value stored at the specified key.				
UNSUBSCRIBE		http://redis.io//commands/unsubscribe	Stop listening for messages posted to the given channels				
ZUNIONSTORE		http://redis.io//commands/zunionstore	Add multiple sorted sets and store the resulting sorted set in a new key				
SAVE		http://redis.io//commands/save	Synchronously save the dataset to disk				
BRPOPLPUSH		http://redis.io//commands/brpoplpush	Pop a value from a list, push it to another list and return it; or block until one is available				
RENAME		http://redis.io//commands/rename	Rename a key				
HMSET		http://redis.io//commands/hmset	Set multiple hash fields to multiple values				
ZINCRBY		http://redis.io//commands/zincrby	Increment the score of a member in a sorted set				
PING		http://redis.io//commands/ping	Ping the server				
LASTSAVE		http://redis.io//commands/lastsave	Get the UNIX time stamp of the last successful save to disk				
SCRIPT KILL		http://redis.io//commands/script-kill	Kill the script currently in execution.				
EXPIREAT		http://redis.io//commands/expireat	Set the expiration for a key as a UNIX timestamp				
BRPOP		http://redis.io//commands/brpop	Remove and get the last element in a list, or block until one is available				
SCRIPT LOAD		http://redis.io//commands/script-load	Load the specified Lua script into the script cache.				
HGETALL		http://redis.io//commands/hgetall	Get all the fields and values in a hash				
ZRANGE		http://redis.io//commands/zrange	Return a range of members in a sorted set, by index				
SORT		http://redis.io//commands/sort	Sort the elements in a list, set or sorted set				
DISCARD		http://redis.io//commands/discard	Discard all commands issued after MULTI				
HDEL		http://redis.io//commands/hdel	Delete one or more hash fields				
BGSAVE		http://redis.io//commands/bgsave	Asynchronously save the dataset to disk				
EXEC		http://redis.io//commands/exec	Execute all commands issued after MULTI				
BGREWRITEAOF		http://redis.io//commands/bgrewriteaof	Asynchronously rewrite the append-only file				
TTL		http://redis.io//commands/ttl	Get the time to live for a key				
INFO		http://redis.io//commands/info	Get information and statistics about the server				
INCRBYFLOAT		http://redis.io//commands/incrbyfloat	Increment the float value of a key by the given amount				
MSET		http://redis.io//commands/mset	Set multiple keys to multiple values				
SLAVEOF		http://redis.io//commands/slaveof	Make the server a slave of another instance, or promote it as master				
DECR		http://redis.io//commands/decr	Decrement the integer value of a key by one				
RPUSH		http://redis.io//commands/rpush	Append one or multiple values to a list				
SETEX		http://redis.io//commands/setex	Set the value and expiration of a key				
GETRANGE		http://redis.io//commands/getrange	Get a substring of the string stored at a key				
ZREVRANGEBYSCORE		http://redis.io//commands/zrevrangebyscore	Return a range of members in a sorted set, by score, with scores ordered from high to low				
PERSIST		http://redis.io//commands/persist	Remove the expiration from a key				
SMEMBERS		http://redis.io//commands/smembers	Get all the members in a set				
LINSERT		http://redis.io//commands/linsert	Insert an element before or after another element in a list				
HINCRBY		http://redis.io//commands/hincrby	Increment the integer value of a hash field by the given number				
ZADD		http://redis.io//commands/zadd	Add one or more members to a sorted set, or update its score if it already exists				
SUBSCRIBE		http://redis.io//commands/subscribe	Listen for messages published to the given channels				
TYPE		http://redis.io//commands/type	Determine the type stored at key				
ZINTERSTORE		http://redis.io//commands/zinterstore	Intersect multiple sorted sets and store the resulting sorted set in a new key				
MIGRATE		http://redis.io//commands/migrate	Atomically transfer a key from a Redis instance to another one.				
GETBIT		http://redis.io//commands/getbit	Returns the bit value at offset in the string value stored at key				
FLUSHDB		http://redis.io//commands/flushdb	Remove all keys from the current database				
RPOPLPUSH		http://redis.io//commands/rpoplpush	Remove the last element in a list, append it to another list and return it				
SMOVE		http://redis.io//commands/smove	Move a member from one set to another				
PTTL		http://redis.io//commands/pttl	Get the time to live for a key in milliseconds				
LSET		http://redis.io//commands/lset	Set the value of an element in a list by its index				
MSETNX		http://redis.io//commands/msetnx	Set multiple keys to multiple values, only if none of the keys exist				
HINCRBYFLOAT		http://redis.io//commands/hincrbyfloat	Increment the float value of a hash field by the given amount				
SPOP		http://redis.io//commands/spop	Remove and return a random member from a set				
RANDOMKEY		http://redis.io//commands/randomkey	Return a random key from the keyspace				
DECRBY		http://redis.io//commands/decrby	Decrement the integer value of a key by the given number				
SADD		http://redis.io//commands/sadd	Add one or more members to a set				
SUNION		http://redis.io//commands/sunion	Add multiple sets				
SCARD		http://redis.io//commands/scard	Get the number of members in a set				
OBJECT		http://redis.io//commands/object	Inspect the internals of Redis objects				
FLUSHALL		http://redis.io//commands/flushall	Remove all keys from all databases				
HLEN		http://redis.io//commands/hlen	Get the number of fields in a hash				
ZREM		http://redis.io//commands/zrem	Remove one or more members from a sorted set				
LPUSHX		http://redis.io//commands/lpushx	Prepend a value to a list, only if the list exists				
HVALS		http://redis.io//commands/hvals	Get all the values in a hash				
ZREMRANGEBYSCORE		http://redis.io//commands/zremrangebyscore	Remove all members in a sorted set within the given scores				
RPUSHX		http://redis.io//commands/rpushx	Append a value to a list, only if the list exists				
SETBIT		http://redis.io//commands/setbit	Sets or clears the bit at offset in the string value stored at key				
ZRANK		http://redis.io//commands/zrank	Determine the index of a member in a sorted set				
CONFIG RESETSTAT		http://redis.io//commands/config-resetstat	Reset the stats returned by INFO				
PUNSUBSCRIBE		http://redis.io//commands/punsubscribe	Stop listening for messages posted to channels matching the given patterns				
SLOWLOG		http://redis.io//commands/slowlog	Manages the Redis slow queries log				
SETNX		http://redis.io//commands/setnx	Set the value of a key, only if the key does not exist				
SELECT		http://redis.io//commands/select	Change the selected database for the current connection				
QUIT		http://redis.io//commands/quit	Close the connection				
SHUTDOWN		http://redis.io//commands/shutdown	Synchronously save the dataset to disk and then shut down the server				
SINTER		http://redis.io//commands/sinter	Intersect multiple sets				
ZRANGEBYSCORE		http://redis.io//commands/zrangebyscore	Return a range of members in a sorted set, by score				
AUTH		http://redis.io//commands/auth	Authenticate to the server				
SETRANGE		http://redis.io//commands/setrange	Overwrite part of a string at key starting at the specified offset				
WATCH		http://redis.io//commands/watch	Watch the given keys to determine execution of the MULTI/EXEC block				
GET		http://redis.io//commands/get	Get the value of a key				
SISMEMBER		http://redis.io//commands/sismember	Determine if a given value is a member of a set				
LTRIM		http://redis.io//commands/ltrim	Trim a list to the specified range				
STRLEN		http://redis.io//commands/strlen	Get the length of the value stored in a key				
MGET		http://redis.io//commands/mget	Get the values of all the given keys				
LREM		http://redis.io//commands/lrem	Remove elements from a list				
PSETEX		http://redis.io//commands/psetex	Set the value and expiration in milliseconds of a key				
INCRBY		http://redis.io//commands/incrby	Increment the integer value of a key by the given amount				
HMGET		http://redis.io//commands/hmget	Get the values of all the given hash fields				
TIME		http://redis.io//commands/time	Return the current server time				
SUNIONSTORE		http://redis.io//commands/sunionstore	Add multiple sets and store the resulting set in a key				
LPUSH		http://redis.io//commands/lpush	Prepend one or multiple values to a list				
CONFIG SET		http://redis.io//commands/config-set	Set a configuration parameter to the given value				
LRANGE		http://redis.io//commands/lrange	Get a range of elements from a list				
LPOP		http://redis.io//commands/lpop	Remove and get the first element in a list				
MULTI		http://redis.io//commands/multi	Mark the start of a transaction block				
RPOP		http://redis.io//commands/rpop	Remove and get the last element in a list				
BITOP		http://redis.io//commands/bitop	Perform bitwise operations between strings				
ZSCORE		http://redis.io//commands/zscore	Get the score associated with the given member in a sorted set				
SDIFF		http://redis.io//commands/sdiff	Subtract multiple sets				
APPEND		http://redis.io//commands/append	Append a value to a key				
SCRIPT FLUSH		http://redis.io//commands/script-flush	Remove all the scripts from the script cache.				
SYNC		http://redis.io//commands/sync	Internal command used for replication				
SRANDMEMBER		http://redis.io//commands/srandmember	Get a random member from a set				
GETSET		http://redis.io//commands/getset	Set the string value of a key and return its old value				
SET		http://redis.io//commands/set	Set the string value of a key				
ZREMRANGEBYRANK		http://redis.io//commands/zremrangebyrank	Remove all members in a sorted set within the given indexes				
EXISTS		http://redis.io//commands/exists	Determine if a key exists				
SCRIPT EXISTS		http://redis.io//commands/script-exists	Check existence of scripts in the script cache.				
HSET		http://redis.io//commands/hset	Set the string value of a hash field				
RESTORE		http://redis.io//commands/restore	Create a key using the provided serialized value, previously obtained using DUMP.				
HEXISTS		http://redis.io//commands/hexists	Determine if a hash field exists				
LLEN		http://redis.io//commands/llen	Get the length of a list				
ZREVRANK		http://redis.io//commands/zrevrank	Determine the index of a member in a sorted set, with scores ordered from high to low				
RENAMENX		http://redis.io//commands/renamenx	Rename a key, only if the new key does not exist				
ZCOUNT		http://redis.io//commands/zcount	Count the members in a sorted set with scores within the given values				
INCR		http://redis.io//commands/incr	Increment the integer value of a key by one				
DEBUG OBJECT		http://redis.io//commands/debug-object	Get debugging information about a key				
PEXPIREAT		http://redis.io//commands/pexpireat	Set the expiration for a key as a UNIX timestamp specified in milliseconds				
DEBUG SEGFAULT		http://redis.io//commands/debug-segfault	Make the server crash				
